trigger:
  branches:
    include:
      - main  # Adjust this to match your branch

variables:
  ACR_NAME: 'acrmicroservices1'
  IMAGE_NAME: 'user-service'
  SERVICE_CONNECTION: 'MCICD_ASC_DRSC'  # New Docker Registry Service Connection

stages:
- stage: BuildAndPush
  displayName: 'Build and Push Docker Image'
  jobs:
  - job: BuildPushImage
    displayName: 'Build and Push Image to ACR'
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - checkout: self  # Fetch code from the repository

    - task: Docker@2
      displayName: 'Login to ACR'
      inputs:
        containerRegistry: $(SERVICE_CONNECTION)
        command: 'login'

    - task: Docker@2
      displayName: 'Build and Push Docker Image'
      inputs:
        containerRegistry: $(SERVICE_CONNECTION)
        repository: $(IMAGE_NAME)
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: |
          latest

- stage: DeployToAKS
  displayName: 'Deploy to AKS Cluster'
  dependsOn: BuildAndPush
  jobs:
  - job: Deploy
    displayName: 'Deploy to AKS'
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - task: AzureCLI@2
      displayName: 'Deploy to AKS'
      inputs:
        azureSubscription: 'MCICD_ASC'  # Azure RM Service Connection
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az aks get-credentials --resource-group Microservices-CI-CD-RG --name MicroservicesAKSCluster --overwrite-existing
          kubectl set image deployment/user-service-deployment user-service=$(ACR_NAME).azurecr.io/$(IMAGE_NAME):latest --record
          kubectl rollout status deployment/user-service-deployment

